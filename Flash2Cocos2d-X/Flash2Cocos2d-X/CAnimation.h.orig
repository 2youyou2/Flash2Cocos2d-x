#pragma once

#include "CProcessBase.h"
#include "CArmatureAniData.h"
#include "CTween.h"
#include "CBone.h"

class CCArmature;

typedef void (*ON_ANIMATION)(std::string _state, std::string _aniNow, CCArmature *_armature, std::string _frameEventName);

/**
* 播放开始
*/
static const std::string START = "start";
/**
* 播放结束
*/
static const std::string COMPLETE = "complete";
/**
* 循环结束
*/
static const std::string LOOP_COMPLETE = "loopComplete";
/**
* 进入事件帧
*/
static const std::string IN_FRAME = "inFrame";



/*为骨架管理Tween*/
class CCARmatureAnimation : public CCProcessBase
{
public:
	static CCARmatureAnimation *create();
public:
	CCARmatureAnimation(CCArmature *_armature);
	~CCARmatureAnimation(void);

	virtual bool init(CCArmature *_armature);
	
	/**
	* 删除，回收
	*/
	void remove();
	void pause();
	void resume();
	void stop();
	/**
	* 获取当前 ArmatureAniData 
	*/
	CCArmatureAniData* getData();
	/**
	* 设置 ArmatureAniData
	*/
	void setData(CCArmatureAniData* _aniData);
	/**
	* 对骨骼动画的速度进行缩放
	* @param _scale 缩放值做为系数乘到原来的动画帧值
	* @param _boneName 指定某个缩放的骨骼ID，不指定则默认为所有骨骼
	*/
	void setAnimationScale(float _scale, std::string _boneName = ""); 
	/**
	* 为骨骼添加 Tween 实例
	*/
	void addTween(CCBone* _bone);
	/**
	* 删除骨骼的 Tween 实例
	*/
	void removeTween(CCBone* _bone);
	/**
	* 获取骨骼的 Tween 实例
	*/
	CCTween *getTween(std::string _boneID);
	/**
	* 更新指定的 Tween 实例
	*/
	void updateTween(std::string _boneID, float dt);
	/**
	* 播放动画
	* @param _to ArmatureAniData 在 ConnectionData 中的字符串索引
	* @param _toFrames 过渡到 _to 动画需要花费的帧
	* @param _listFrames _to 动画播放持续的帧
	* @param _loop 是否循环
	* @param _ease FrameNodeList 各个关键点的缓动方式，-1:SineOut，0:Line，1:SineIn，2:SineInOut
	*/
	void playTo(void * _to, int _toFrames, int _listFrames = 0, bool _loop = false, int _ease = 0);
	
	void updateHandler();

	void updateCurrentPrecent();
public:
	/**
	* 事件回调
	*/
	ON_ANIMATION		onAnimation;

	CCArmatureAniData*	armatureAniData;

	CCBoneAniData*		boneAniData;

private:
	//std::map<std::string, CCTween*> tweens;
	CCDictionary					*tweens;
	std::string						aniIDNow;
	CCArmature						*armature;
	
};

